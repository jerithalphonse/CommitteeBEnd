// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebApi.Helpers;

namespace WebApi.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("WebApi.Entities.Governorates", b =>
                {
                    b.Property<string>("Code")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("ArabicName");

                    b.Property<string>("Name");

                    b.Property<int>("SortOrder");

                    b.HasKey("Code");

                    b.ToTable("Governorates");
                });

            modelBuilder.Entity("WebApi.Entities.Kiosks", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("AreVotersPresentAsWitnesses");

                    b.Property<string>("CloseTime");

                    b.Property<bool>("HasIssue");

                    b.Property<bool>("IsActive");

                    b.Property<bool>("IsNoFingerprintKiosk");

                    b.Property<bool>("IsUnifiedKiosk");

                    b.Property<string>("OpenTime");

                    b.Property<int>("PollingDayStatus");

                    b.Property<int>("PollingStationID");

                    b.Property<string>("SerialNumber");

                    b.Property<string>("UnlockCode");

                    b.Property<string>("WilayatCode");

                    b.HasKey("Id");

                    b.HasIndex("PollingStationID");

                    b.HasIndex("WilayatCode");

                    b.ToTable("Kiosks");
                });

            modelBuilder.Entity("WebApi.Entities.KiosksAssign", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AssignedBy");

                    b.Property<string>("AttendanceCompletedAt");

                    b.Property<string>("AttendanceStartedAt");

                    b.Property<int?>("KioskId");

                    b.Property<int?>("MemberId");

                    b.Property<int?>("PollingStationID");

                    b.Property<bool>("isDeleted");

                    b.HasKey("Id");

                    b.HasIndex("AssignedBy");

                    b.HasIndex("KioskId");

                    b.HasIndex("MemberId");

                    b.HasIndex("PollingStationID");

                    b.ToTable("KiosksAssign");
                });

            modelBuilder.Entity("WebApi.Entities.MessagingModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("By");

                    b.Property<string>("CreatedAt");

                    b.Property<string>("Message");

                    b.Property<string>("To");

                    b.Property<string>("WilayatCode");

                    b.HasKey("Id");

                    b.HasIndex("By");

                    b.HasIndex("WilayatCode");

                    b.ToTable("Messaging");
                });

            modelBuilder.Entity("WebApi.Entities.PollingStations", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ArabicName");

                    b.Property<bool>("IsActive");

                    b.Property<bool>("IsUnifiedPollingCenter");

                    b.Property<double>("Latitude");

                    b.Property<double>("Longitude");

                    b.Property<string>("Name");

                    b.Property<string>("WilayatCode");

                    b.HasKey("Id");

                    b.HasIndex("WilayatCode");

                    b.ToTable("PollingStations");
                });

            modelBuilder.Entity("WebApi.Entities.Roles", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("AssignPollingStationTab");

                    b.Property<bool>("AttendanceTab");

                    b.Property<bool>("AttendanceTabReassign");

                    b.Property<bool>("DirectionsTab");

                    b.Property<bool>("KiosksTab");

                    b.Property<bool>("KiosksTabReassign");

                    b.Property<bool>("MessageTab");

                    b.Property<bool>("MessageTabAllMembers");

                    b.Property<bool>("MessageTabCheckMessage");

                    b.Property<bool>("MessageTabHeadCommittees");

                    b.Property<bool>("MessageTabRestrictMessage");

                    b.Property<bool>("MessageTabToHeadCommittee");

                    b.Property<bool>("MessageTabWaliOfficers");

                    b.Property<string>("Name");

                    b.Property<bool>("NotificationTab");

                    b.Property<bool>("ScanQRTab");

                    b.Property<bool>("ScanQrTabSelfAssignKiosks");

                    b.Property<bool>("WitnessTab");

                    b.Property<bool>("WitnessTabAddMore");

                    b.HasKey("Id");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("WebApi.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AttendedAt");

                    b.Property<string>("CommiteeType");

                    b.Property<string>("Email");

                    b.Property<string>("Gender");

                    b.Property<string>("GovernorateCode");

                    b.Property<string>("ImageUrl");

                    b.Property<int?>("KioskId");

                    b.Property<string>("NameArabic");

                    b.Property<string>("NameEnglish");

                    b.Property<byte[]>("PasswordHash");

                    b.Property<byte[]>("PasswordSalt");

                    b.Property<string>("Phone");

                    b.Property<int?>("PollingStationId");

                    b.Property<int?>("RoleId");

                    b.Property<string>("Username");

                    b.Property<string>("WilayatCode");

                    b.HasKey("Id");

                    b.HasIndex("GovernorateCode");

                    b.HasIndex("KioskId");

                    b.HasIndex("PollingStationId");

                    b.HasIndex("RoleId");

                    b.HasIndex("WilayatCode");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("WebApi.Entities.Wilayats", b =>
                {
                    b.Property<string>("Code")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("ArabicName");

                    b.Property<string>("GovernorateCode");

                    b.Property<bool>("IsActive");

                    b.Property<string>("Name");

                    b.Property<int>("SortOrder");

                    b.HasKey("Code");

                    b.HasIndex("GovernorateCode");

                    b.ToTable("Wilayats");
                });

            modelBuilder.Entity("WebApi.Entities.Witness", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ImageUrl");

                    b.Property<int>("PollingStationID");

                    b.Property<int?>("UploadedBy");

                    b.Property<string>("UploadedTime");

                    b.Property<string>("WilayatCode");

                    b.HasKey("Id");

                    b.HasIndex("PollingStationID");

                    b.HasIndex("UploadedBy");

                    b.HasIndex("WilayatCode");

                    b.ToTable("Witness");
                });

            modelBuilder.Entity("WebApi.Entities.Kiosks", b =>
                {
                    b.HasOne("WebApi.Entities.PollingStations", "PollingStation")
                        .WithMany()
                        .HasForeignKey("PollingStationID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("WebApi.Entities.Wilayats", "Wilayat")
                        .WithMany()
                        .HasForeignKey("WilayatCode");
                });

            modelBuilder.Entity("WebApi.Entities.KiosksAssign", b =>
                {
                    b.HasOne("WebApi.Entities.User", "assignedbymember")
                        .WithMany()
                        .HasForeignKey("AssignedBy");

                    b.HasOne("WebApi.Entities.Kiosks", "kiosks")
                        .WithMany()
                        .HasForeignKey("KioskId");

                    b.HasOne("WebApi.Entities.User", "member")
                        .WithMany()
                        .HasForeignKey("MemberId");

                    b.HasOne("WebApi.Entities.PollingStations", "PollingStation")
                        .WithMany()
                        .HasForeignKey("PollingStationID");
                });

            modelBuilder.Entity("WebApi.Entities.MessagingModel", b =>
                {
                    b.HasOne("WebApi.Entities.User", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("By");

                    b.HasOne("WebApi.Entities.Wilayats", "Wilayat")
                        .WithMany()
                        .HasForeignKey("WilayatCode");
                });

            modelBuilder.Entity("WebApi.Entities.PollingStations", b =>
                {
                    b.HasOne("WebApi.Entities.Wilayats", "Wilayat")
                        .WithMany()
                        .HasForeignKey("WilayatCode");
                });

            modelBuilder.Entity("WebApi.Entities.User", b =>
                {
                    b.HasOne("WebApi.Entities.Governorates", "Governorate")
                        .WithMany()
                        .HasForeignKey("GovernorateCode");

                    b.HasOne("WebApi.Entities.Kiosks", "Kiosks")
                        .WithMany()
                        .HasForeignKey("KioskId");

                    b.HasOne("WebApi.Entities.PollingStations", "PollingStation")
                        .WithMany()
                        .HasForeignKey("PollingStationId");

                    b.HasOne("WebApi.Entities.Roles", "Roles")
                        .WithMany()
                        .HasForeignKey("RoleId");

                    b.HasOne("WebApi.Entities.Wilayats", "Wilayat")
                        .WithMany()
                        .HasForeignKey("WilayatCode");
                });

            modelBuilder.Entity("WebApi.Entities.Wilayats", b =>
                {
                    b.HasOne("WebApi.Entities.Governorates", "Governorate")
                        .WithMany()
                        .HasForeignKey("GovernorateCode");
                });

            modelBuilder.Entity("WebApi.Entities.Witness", b =>
                {
                    b.HasOne("WebApi.Entities.PollingStations", "PollingStation")
                        .WithMany()
                        .HasForeignKey("PollingStationID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("WebApi.Entities.User", "uploadedByMember")
                        .WithMany()
                        .HasForeignKey("UploadedBy");

                    b.HasOne("WebApi.Entities.Wilayats", "Wilayat")
                        .WithMany()
                        .HasForeignKey("WilayatCode");
                });
#pragma warning restore 612, 618
        }
    }
}
